{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Users.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <ul>\n//           {profiles.map((profile, index) => (\n//             <li key={index}>\n//               <p>Name: {profile.name}</p>\n//               <img\n//                 src={profile.banner}\n//                 alt={`Banner for ${profile.name}`}\n//                 style={{ width: \"200px\" }}\n//               />\n//               <img\n//                 src={profile.avatar}\n//                 alt={`Avatar for ${profile.name}`}\n//                 style={{ width: \"200px\" }}\n//               />\n//               <Link to={`/profile/${profile.name}`}>View Profile</Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               <img\n//                 src={profile.avatar}\n//                 className=\"card-img-top\"\n//                 alt={`Avatar for ${profile.name}`}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{profile.name}</h5>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               <img\n//                 src={profile.avatar}\n//                 className=\"card-img-top\"\n//                 alt={`Avatar for ${profile.name}`}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{profile.name}</h5>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               {profile.avatar ? (\n//                 <div className=\"card-img-container\">\n//                   <img\n//                     src={profile.avatar}\n//                     className=\"card-img-top\"\n//                     alt={`Avatar for ${profile.name}`}\n//                   />\n//                 </div>\n//               ) : (\n//                 <div className=\"card-img-container\">\n//                   <div className=\"avatar-placeholder\">\n//                     <span className=\"avatar-placeholder-text\">No Avatar</span>\n//                   </div>\n//                 </div>\n//               )}\n//               <div className=\"card-body user\">\n//                 <p className=\"card-title\">Username: {profile.name}</p>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./Users.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [profiles, setProfiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchProfiles = async () => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(\"https://nf-api.onrender.com/api/v1/social/profiles\", {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch profiles\");\n      }\n      const responseData = await response.json();\n      const filteredProfiles = responseData.filter(profile => profile.avatar && profile.banner);\n      setProfiles(filteredProfiles);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching profiles:\", error.message);\n      setError(\"Failed to fetch profiles\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this) : profiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No profiles found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: profiles.map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.avatar,\n            className: \"card-img-top\",\n            alt: `Avatar for ${profile.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body user\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title\",\n            children: [\"Username: \", profile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${profile.name}`,\n              className: \"btn btn-primary\",\n              children: \"View Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this)]\n      }, profile.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"ZF3ApXkXRIZFH215+ib3m+gKk0E=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Link","jsxDEV","_jsxDEV","Users","_s","profiles","setProfiles","loading","setLoading","error","setError","fetchProfiles","authToken","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","responseData","json","filteredProfiles","filter","profile","avatar","banner","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","src","alt","name","to","id","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Users.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <ul>\n//           {profiles.map((profile, index) => (\n//             <li key={index}>\n//               <p>Name: {profile.name}</p>\n//               <img\n//                 src={profile.banner}\n//                 alt={`Banner for ${profile.name}`}\n//                 style={{ width: \"200px\" }}\n//               />\n//               <img\n//                 src={profile.avatar}\n//                 alt={`Avatar for ${profile.name}`}\n//                 style={{ width: \"200px\" }}\n//               />\n//               <Link to={`/profile/${profile.name}`}>View Profile</Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               <img\n//                 src={profile.avatar}\n//                 className=\"card-img-top\"\n//                 alt={`Avatar for ${profile.name}`}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{profile.name}</h5>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               <img\n//                 src={profile.avatar}\n//                 className=\"card-img-top\"\n//                 alt={`Avatar for ${profile.name}`}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{profile.name}</h5>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n// import \"./Users.css\";\n\n// const Users = () => {\n//   const [profiles, setProfiles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const fetchProfiles = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/profiles\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch profiles\");\n//       }\n//       const responseData = await response.json();\n//       setProfiles(responseData);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error(\"Error fetching profiles:\", error.message);\n//       setError(\"Failed to fetch profiles\");\n//       setLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProfiles();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>Error: {error}</p>\n//       ) : profiles.length === 0 ? (\n//         <p>No profiles found</p>\n//       ) : (\n//         <div className=\"users-container\">\n//           {profiles.map((profile) => (\n//             <div key={profile.id} className=\"user-card\">\n//               {profile.avatar ? (\n//                 <div className=\"card-img-container\">\n//                   <img\n//                     src={profile.avatar}\n//                     className=\"card-img-top\"\n//                     alt={`Avatar for ${profile.name}`}\n//                   />\n//                 </div>\n//               ) : (\n//                 <div className=\"card-img-container\">\n//                   <div className=\"avatar-placeholder\">\n//                     <span className=\"avatar-placeholder-text\">No Avatar</span>\n//                   </div>\n//                 </div>\n//               )}\n//               <div className=\"card-body user\">\n//                 <p className=\"card-title\">Username: {profile.name}</p>\n//                 <div className=\"card-footer\">\n//                   <Link\n//                     to={`/profile/${profile.name}`}\n//                     className=\"btn btn-primary\"\n//                   >\n//                     View Profile\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Users;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport \"./Users.css\";\n\nconst Users = () => {\n  const [profiles, setProfiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchProfiles = async () => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(\n        \"https://nf-api.onrender.com/api/v1/social/profiles\",\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch profiles\");\n      }\n      const responseData = await response.json();\n      const filteredProfiles = responseData.filter(\n        (profile) => profile.avatar && profile.banner\n      );\n      setProfiles(filteredProfiles);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching profiles:\", error.message);\n      setError(\"Failed to fetch profiles\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : profiles.length === 0 ? (\n        <p>No profiles found</p>\n      ) : (\n        <div className=\"users-container\">\n          {profiles.map((profile) => (\n            <div key={profile.id} className=\"user-card\">\n              <div className=\"card-img-container\">\n                <img\n                  src={profile.avatar}\n                  className=\"card-img-top\"\n                  alt={`Avatar for ${profile.name}`}\n                />\n              </div>\n              <div className=\"card-body user\">\n                <p className=\"card-title\">Username: {profile.name}</p>\n                <div className=\"card-footer\">\n                  <Link\n                    to={`/profile/${profile.name}`}\n                    className=\"btn btn-primary\"\n                  >\n                    View Profile\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}