{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/MyProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n//       {avatarURL && (\n//         <div className=\"card\" style={{ width: \"18rem\" }}>\n//           <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//           <div className=\"card-body\">\n//             <p className=\"card-text\">Update your avatar or banner image.</p>\n//           </div>\n//         </div>\n//       )}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {error && <p>Error: {error}</p>}\n//       <h2>Your Posts:</h2>\n//       {posts.map((post) => (\n//         <div key={post.id}>\n//           <h3>{post.title}</h3>\n//           <p>{post.body}</p>\n//           <EditPost postId={post.id} />\n//           <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//         </div>\n//       ))}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\nimport \"./MyProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProfile = () => {\n  _s();\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  const profileName = localStorage.getItem(\"userName\");\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n    fetchUserPosts();\n  }, []);\n  const handleAvatarURLChange = event => {\n    setAvatarURL(event.target.value);\n  };\n  const handleBannerURLChange = event => {\n    setBannerURL(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: avatarURL,\n          banner: bannerURL\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n  const handlePostDeleted = async postId => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (response.ok || response.status === 204) {\n        setPosts(posts.filter(post => post.id !== postId));\n        setSuccessMessage(\"Post deleted successfully!\");\n        setSuccessMessageVisible(true);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), bannerURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bannerURL,\n        alt: \"Banner\",\n        className: \"banner-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        width: \"24rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarURL,\n        className: \"card-img-top\",\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Profile Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Update your avatar and banner images.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"avatarURL\",\n              children: \"New Avatar URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"avatarURL\",\n              value: avatarURL,\n              onChange: handleAvatarURLChange,\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              children: \"Update Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bannerURL\",\n              children: \"New Banner URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"bannerURL\",\n              value: bannerURL,\n              onChange: handleBannerURLChange,\n              className: \"form-control mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              children: \"Update Banner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        width: \"24rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-block\",\n          onClick: handleCreatePostClick,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), showCreatePostForm && /*#__PURE__*/_jsxDEV(CreatePostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts\",\n          children: \"View Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary mr-2\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProfile, \"MekvRBuNCjf9ip6HFjJLAXrZwD4=\");\n_c = MyProfile;\nexport default MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["React","useState","useEffect","Link","Navbar","CreatePostForm","DeletePost","EditPost","jsxDEV","_jsxDEV","MyProfile","_s","avatarURL","setAvatarURL","bannerURL","setBannerURL","error","setError","showCreatePostForm","setShowCreatePostForm","posts","setPosts","successMessage","setSuccessMessage","successMessageVisible","setSuccessMessageVisible","profileName","localStorage","getItem","storedAvatarURL","storedBannerURL","fetchUserPosts","authToken","response","fetch","headers","Authorization","ok","Error","postData","json","console","handleAvatarURLChange","event","target","value","handleBannerURLChange","handleSubmit","preventDefault","method","body","JSON","stringify","avatar","banner","setItem","log","handleCreatePostClick","handlePostDeleted","postId","status","filter","post","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","width","onSubmit","htmlFor","type","onChange","onClick","to","map","title","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/MyProfile.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n//       {avatarURL && (\n//         <div className=\"card\" style={{ width: \"18rem\" }}>\n//           <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//           <div className=\"card-body\">\n//             <p className=\"card-text\">Update your avatar or banner image.</p>\n//           </div>\n//         </div>\n//       )}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {error && <p>Error: {error}</p>}\n//       <h2>Your Posts:</h2>\n//       {posts.map((post) => (\n//         <div key={post.id}>\n//           <h3>{post.title}</h3>\n//           <p>{post.body}</p>\n//           <EditPost postId={post.id} />\n//           <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//         </div>\n//       ))}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\nimport \"./MyProfile.css\";\n\nconst MyProfile = () => {\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n  const profileName = localStorage.getItem(\"userName\");\n\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n\n    fetchUserPosts();\n  }, []);\n\n  const handleAvatarURLChange = (event) => {\n    setAvatarURL(event.target.value);\n  };\n\n  const handleBannerURLChange = (event) => {\n    setBannerURL(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            avatar: avatarURL,\n            banner: bannerURL,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n\n  const handlePostDeleted = async (postId) => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      if (response.ok || response.status === 204) {\n        setPosts(posts.filter((post) => post.id !== postId));\n        setSuccessMessage(\"Post deleted successfully!\");\n        setSuccessMessageVisible(true);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      {/* Banner */}\n      {bannerURL && (\n        <div className=\"banner-container\">\n          <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n        </div>\n      )}\n\n      {/* Profile card */}\n      <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n        <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Profile Images</h5>\n          <p className=\"card-text\">Update your avatar and banner images.</p>\n          {/* Form for updating avatar */}\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"avatarURL\">New Avatar URL:</label>\n              <input\n                type=\"text\"\n                id=\"avatarURL\"\n                value={avatarURL}\n                onChange={handleAvatarURLChange}\n                className=\"form-control mb-2\"\n              />\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                Update Avatar\n              </button>\n            </div>\n          </form>\n\n          {/* Form for updating banner */}\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"bannerURL\">New Banner URL:</label>\n              <input\n                type=\"text\"\n                id=\"bannerURL\"\n                value={bannerURL}\n                onChange={handleBannerURLChange}\n                className=\"form-control mb-2\"\n              />\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                Update Banner\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n      <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Create Post</h5>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block\"\n            onClick={handleCreatePostClick}\n          >\n            Create Post\n          </button>\n          {showCreatePostForm && <CreatePostForm />}\n          <Link to=\"/posts\">View Posts</Link>\n        </div>\n      </div>\n\n      {/* Posts */}\n      <div className=\"container mt-4\">\n        <h2>Your Posts:</h2>\n        <div className=\"row\">\n          {posts.map((post) => (\n            <div className=\"col-md-4 mb-4\" key={post.id}>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{post.title}</h5>\n                  <p className=\"card-text\">{post.body}</p>\n                  <button className=\"btn btn-primary mr-2\">Edit</button>\n                  <button className=\"btn btn-danger\">Delete</button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyProfile;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}