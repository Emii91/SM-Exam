{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const NewEstablishmentForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     address: \"\",\n//     description: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/holidaze/venues\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(formData),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to create establishment\");\n//       }\n\n//       setFormData({\n//         name: \"\",\n//         address: \"\",\n//         description: \"\",\n//       });\n//       alert(\"Establishment created successfully!\");\n//     } catch (error) {\n//       console.error(\"Error creating establishment:\", error);\n//       alert(\"Failed to create establishment. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create a New Establishment</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Address:</label>\n//           <input\n//             type=\"text\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Description:</label>\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Create Establishment</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const AdminDashboard = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <NewEstablishmentForm />\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["/Users/ecf/holi-exam/src/Pages/NewEstablishment.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const NewEstablishmentForm = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     address: \"\",\n//     description: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/holidaze/venues\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(formData),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to create establishment\");\n//       }\n\n//       setFormData({\n//         name: \"\",\n//         address: \"\",\n//         description: \"\",\n//       });\n//       alert(\"Establishment created successfully!\");\n//     } catch (error) {\n//       console.error(\"Error creating establishment:\", error);\n//       alert(\"Failed to create establishment. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create a New Establishment</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name:</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Address:</label>\n//           <input\n//             type=\"text\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Description:</label>\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Create Establishment</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const AdminDashboard = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <NewEstablishmentForm />\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}