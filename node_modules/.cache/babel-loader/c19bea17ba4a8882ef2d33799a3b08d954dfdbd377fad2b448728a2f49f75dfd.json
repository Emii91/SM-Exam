{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const profileName = localStorage.getItem(\"userName\");\n  const handleAvatarURLChange = event => {\n    setAvatarURL(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const profileName = localStorage.getItem(\"userName\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: avatarURL,\n          banner: null\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n      setSuccess(true);\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"avatarURL\",\n          children: \"Avatar URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"avatarURL\",\n          value: avatarURL,\n          onChange: handleAvatarURLChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Avatar uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"EXTx7cMw01a0wt9lazL1RRORjz4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Profile","_s","avatarURL","setAvatarURL","error","setError","success","setSuccess","profileName","localStorage","getItem","handleAvatarURLChange","event","target","value","handleSubmit","preventDefault","authToken","response","fetch","method","headers","Authorization","body","JSON","stringify","avatar","banner","ok","Error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Profile.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\n\nconst Profile = () => {\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const profileName = localStorage.getItem(\"userName\");\n\n  const handleAvatarURLChange = (event) => {\n    setAvatarURL(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const profileName = localStorage.getItem(\"userName\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            avatar: avatarURL,\n            banner: null,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n\n      setSuccess(true);\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"avatarURL\">Avatar URL:</label>\n          <input\n            type=\"text\"\n            id=\"avatarURL\"\n            value={avatarURL}\n            onChange={handleAvatarURLChange}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {error && <p>Error: {error}</p>}\n      {success && <p>Avatar uploaded successfully!</p>}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}