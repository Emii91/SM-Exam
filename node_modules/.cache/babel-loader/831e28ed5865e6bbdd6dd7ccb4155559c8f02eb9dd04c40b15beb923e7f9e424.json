{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Register.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Register = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\">\n//         <h2>Register</h2>\n//         <form>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">\n//               Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               id=\"name\"\n//               placeholder=\"Enter your name\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email address\n//             </label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               id=\"email\"\n//               placeholder=\"name@example.com\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               id=\"password\"\n//               placeholder=\"Enter your password\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\n//               Confirm Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               id=\"confirmPassword\"\n//               placeholder=\"Confirm your password\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">\n//             Register\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (password !== confirmPassword) {\n        throw new Error(\"Passwords do not match\");\n      }\n      const response = await fetch(\"https://nf-api.onrender.com/api/v1/holidaze/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Registration failed\");\n      }\n      setSuccess(\"Registration successful\");\n      localStorage.setItem(\"userEmail\", email);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            placeholder: \"name@example.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"form-label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"confirmPassword\",\n            placeholder: \"Confirm your password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"6pYcD2hGsluqFfye2byD5sDsets=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","handleSubmit","e","preventDefault","Error","response","fetch","method","headers","body","JSON","stringify","ok","localStorage","setItem","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Register.js"],"sourcesContent":["// import React from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Register = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\">\n//         <h2>Register</h2>\n//         <form>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"name\" className=\"form-label\">\n//               Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               className=\"form-control\"\n//               id=\"name\"\n//               placeholder=\"Enter your name\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"email\" className=\"form-label\">\n//               Email address\n//             </label>\n//             <input\n//               type=\"email\"\n//               className=\"form-control\"\n//               id=\"email\"\n//               placeholder=\"name@example.com\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               id=\"password\"\n//               placeholder=\"Enter your password\"\n//             />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">\n//               Confirm Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"form-control\"\n//               id=\"confirmPassword\"\n//               placeholder=\"Confirm your password\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">\n//             Register\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (password !== confirmPassword) {\n        throw new Error(\"Passwords do not match\");\n      }\n\n      const response = await fetch(\n        \"https://nf-api.onrender.com/api/v1/holidaze/auth/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Registration failed\");\n      }\n\n      setSuccess(\"Registration successful\");\n\n      localStorage.setItem(\"userEmail\", email);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container mt-5\">\n        <h2>Register</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"name@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"confirmPassword\"\n              placeholder=\"Confirm your password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Register\n          </button>\n          {error && <div className=\"text-danger\">{error}</div>}\n          {success && <div className=\"text-success\">{success}</div>}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}