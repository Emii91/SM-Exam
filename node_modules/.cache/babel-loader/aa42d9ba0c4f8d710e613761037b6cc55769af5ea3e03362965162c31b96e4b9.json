{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/MyProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {avatarURL && (\n//         <div>\n//           <h2>Avatar Preview</h2>\n//           <img src={avatarURL} alt=\"Avatar\" style={{ width: \"200px\" }} />\n//         </div>\n//       )}\n//       {bannerURL && (\n//         <div>\n//           <h2>Banner Preview</h2>\n//           <img src={bannerURL} alt=\"Banner\" style={{ width: \"400px\" }} />\n//         </div>\n//       )}\n//       {error && <p>Error: {error}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProfile = () => {\n  _s();\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const profileName = localStorage.getItem(\"userName\");\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n    fetchUserPosts();\n  }, []);\n  const handleAvatarURLChange = event => {\n    setAvatarURL(event.target.value);\n  };\n  const handleBannerURLChange = event => {\n    setBannerURL(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: avatarURL,\n          banner: bannerURL\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n  const handlePostDeleted = async postId => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete post\");\n      }\n      setPosts(posts.filter(post => post.id !== postId));\n      setSuccessMessage(\"Post deleted successfully!\");\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"avatarURL\",\n          children: \"Avatar URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"avatarURL\",\n          value: avatarURL,\n          onChange: handleAvatarURLChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bannerURL\",\n          children: \"Banner URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"bannerURL\",\n          value: bannerURL,\n          onChange: handleBannerURLChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreatePostClick,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), showCreatePostForm && /*#__PURE__*/_jsxDEV(CreatePostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      children: \"View Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), avatarURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Avatar Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarURL,\n        alt: \"Avatar\",\n        style: {\n          width: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), bannerURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Banner Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bannerURL,\n        alt: \"Banner\",\n        style: {\n          width: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditPost, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeletePost, {\n        postId: post.id,\n        onPostDeleted: handlePostDeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProfile, \"P+NWbrrYtATq7WEuR32D8WBP+8s=\");\n_c = MyProfile;\nexport default MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["React","useState","useEffect","Link","Navbar","CreatePostForm","DeletePost","EditPost","jsxDEV","_jsxDEV","MyProfile","_s","avatarURL","setAvatarURL","bannerURL","setBannerURL","error","setError","showCreatePostForm","setShowCreatePostForm","posts","setPosts","successMessage","setSuccessMessage","profileName","localStorage","getItem","storedAvatarURL","storedBannerURL","fetchUserPosts","authToken","response","fetch","headers","Authorization","ok","Error","postData","json","console","handleAvatarURLChange","event","target","value","handleBannerURLChange","handleSubmit","preventDefault","method","body","JSON","stringify","avatar","banner","setItem","log","handleCreatePostClick","handlePostDeleted","postId","filter","post","id","setSuccessMessageVisible","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","onClick","to","src","alt","style","width","map","title","onPostDeleted","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/MyProfile.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {avatarURL && (\n//         <div>\n//           <h2>Avatar Preview</h2>\n//           <img src={avatarURL} alt=\"Avatar\" style={{ width: \"200px\" }} />\n//         </div>\n//       )}\n//       {bannerURL && (\n//         <div>\n//           <h2>Banner Preview</h2>\n//           <img src={bannerURL} alt=\"Banner\" style={{ width: \"400px\" }} />\n//         </div>\n//       )}\n//       {error && <p>Error: {error}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\n\nconst MyProfile = () => {\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const profileName = localStorage.getItem(\"userName\");\n\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n\n    fetchUserPosts();\n  }, []);\n\n  const handleAvatarURLChange = (event) => {\n    setAvatarURL(event.target.value);\n  };\n\n  const handleBannerURLChange = (event) => {\n    setBannerURL(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            avatar: avatarURL,\n            banner: bannerURL,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n\n  const handlePostDeleted = async (postId) => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete post\");\n      }\n\n      setPosts(posts.filter((post) => post.id !== postId));\n      setSuccessMessage(\"Post deleted successfully!\");\n      setSuccessMessageVisible(true);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"avatarURL\">Avatar URL:</label>\n          <input\n            type=\"text\"\n            id=\"avatarURL\"\n            value={avatarURL}\n            onChange={handleAvatarURLChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"bannerURL\">Banner URL:</label>\n          <input\n            type=\"text\"\n            id=\"bannerURL\"\n            value={bannerURL}\n            onChange={handleBannerURLChange}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <button onClick={handleCreatePostClick}>Create Post</button>\n      {showCreatePostForm && <CreatePostForm />}\n      <Link to=\"/posts\">View Posts</Link>\n      {avatarURL && (\n        <div>\n          <h2>Avatar Preview</h2>\n          <img src={avatarURL} alt=\"Avatar\" style={{ width: \"200px\" }} />\n        </div>\n      )}\n      {bannerURL && (\n        <div>\n          <h2>Banner Preview</h2>\n          <img src={bannerURL} alt=\"Banner\" style={{ width: \"400px\" }} />\n        </div>\n      )}\n      {error && <p>Error: {error}</p>}\n      <h2>Your Posts:</h2>\n      {posts.map((post) => (\n        <div key={post.id}>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n          <EditPost postId={post.id} />\n          <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n        </div>\n      ))}\n      {successMessage && <p>{successMessage}</p>}\n    </div>\n  );\n};\n\nexport default MyProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}