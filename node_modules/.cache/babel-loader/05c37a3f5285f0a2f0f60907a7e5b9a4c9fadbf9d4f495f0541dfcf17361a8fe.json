{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Profiles.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { useParams } from \"react-router-dom\";\n\n// const Profiles = () => {\n//   const { name } = useParams();\n//   const [profileData, setProfileData] = useState(null);\n\n//   useEffect(() => {\n//     const fetchProfileData = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch profile\");\n//         }\n//         const profile = await response.json();\n//         setProfileData(profile);\n//       } catch (error) {\n//         console.error(\"Error fetching profile:\", error.message);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [name]);\n\n//   if (!profileData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h1>Profile Page for {name}</h1>\n//       <p>\n//         Avatar:{\" \"}\n//         <img src={profileData.avatar} alt=\"Avatar\" style={{ width: \"200px\" }} />\n//       </p>\n//       <p>\n//         Banner:{\" \"}\n//         <img src={profileData.banner} alt=\"Banner\" style={{ width: \"200px\" }} />\n//       </p>\n//       <p>Name: {profileData.name}</p>\n//       <p>Followers: {profileData._count.followers}</p>\n//       <p>Following: {profileData._count.following}</p>\n//       <p>Posts: {profileData._count.posts}</p>\n//     </div>\n//   );\n// };\n\n// export default Profiles;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${name}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch profile\");\n        }\n        const profile = await response.json();\n        setProfileData(profile);\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error.message);\n      }\n    };\n    fetchProfileData();\n  }, [name]);\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Profile Page for \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Avatar:\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileData.avatar,\n        alt: \"Avatar\",\n        style: {\n          width: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Banner:\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileData.banner,\n        alt: \"Banner\",\n        style: {\n          width: \"200px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", profileData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Followers: \", profileData._count.followers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Following: \", profileData._count.following]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Posts: \", profileData._count.posts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Profiles, \"SMyvZALi0BHVwVVoF+rSU1hKKbY=\", false, function () {\n  return [useParams];\n});\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","useParams","jsxDEV","_jsxDEV","Profiles","_s","name","profileData","setProfileData","fetchProfileData","authToken","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","profile","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","src","avatar","alt","style","width","banner","_count","followers","following","posts","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Profiles.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { useParams } from \"react-router-dom\";\n\n// const Profiles = () => {\n//   const { name } = useParams();\n//   const [profileData, setProfileData] = useState(null);\n\n//   useEffect(() => {\n//     const fetchProfileData = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch profile\");\n//         }\n//         const profile = await response.json();\n//         setProfileData(profile);\n//       } catch (error) {\n//         console.error(\"Error fetching profile:\", error.message);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [name]);\n\n//   if (!profileData) {\n//     return <p>Loading...</p>;\n//   }\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h1>Profile Page for {name}</h1>\n//       <p>\n//         Avatar:{\" \"}\n//         <img src={profileData.avatar} alt=\"Avatar\" style={{ width: \"200px\" }} />\n//       </p>\n//       <p>\n//         Banner:{\" \"}\n//         <img src={profileData.banner} alt=\"Banner\" style={{ width: \"200px\" }} />\n//       </p>\n//       <p>Name: {profileData.name}</p>\n//       <p>Followers: {profileData._count.followers}</p>\n//       <p>Following: {profileData._count.following}</p>\n//       <p>Posts: {profileData._count.posts}</p>\n//     </div>\n//   );\n// };\n\n// export default Profiles;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { useParams } from \"react-router-dom\";\nconst Profiles = () => {\n  const { name } = useParams();\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch profile\");\n        }\n        const profile = await response.json();\n        setProfileData(profile);\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error.message);\n      }\n    };\n    fetchProfileData();\n  }, [name]);\n  if (!profileData) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div>\n      <Navbar />\n      <h1>Profile Page for {name}</h1>\n      <p>\n        Avatar:{\" \"}\n        <img src={profileData.avatar} alt=\"Avatar\" style={{ width: \"200px\" }} />\n      </p>\n      <p>\n        Banner:{\" \"}\n        <img src={profileData.banner} alt=\"Banner\" style={{ width: \"200px\" }} />\n      </p>\n      <p>Name: {profileData.name}</p>\n      <p>Followers: {profileData._count.followers}</p>\n      <p>Following: {profileData._count.following}</p>\n      <p>Posts: {profileData._count.posts}</p>\n    </div>\n  );\n};\nexport default Profiles;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}