{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Post/DeletePost.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// const DeletePost = ({ postId }) => {\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//       console.log(\"Post deleted successfully!\");\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return <button onClick={handleDelete}>Delete Post</button>;\n// };\n\n// export default DeletePost;\n\n// Denne fungerer med melding men error\n// import React, { useState } from \"react\";\n\n// const DeletePost = ({ postId, onPostDeleted }) => {\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//       console.log(\"Post deleted successfully!\");\n//       setSuccessMessage(\"Post deleted successfully!\");\n//       onPostDeleted(postId);\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Delete Post</button>\n//       {successMessage && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeletePost;\n\n// import React, { useState } from \"react\";\n\n// const DeletePost = ({ postId, onPostDeleted }) => {\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         if (response.status !== 404) {\n//           throw new Error(\"Failed to delete post\");\n//         }\n//       } else {\n//         setTimeout(() => {\n//           setPosts(posts.filter((post) => post.id !== postId));\n//           setSuccessMessage(\"Post deleted successfully!\");\n//           setSuccessMessageVisible(true);\n//         }, 100);\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setErrorMessage(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Delete Post</button>\n//       {errorMessage && <p>{errorMessage}</p>}\n//       {successMessage && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeletePost;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeletePost = ({\n  postId,\n  onPostDeleted\n}) => {\n  _s();\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleDelete = async () => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (response.ok) {\n        setSuccessMessage(\"Post deleted successfully!\");\n        onPostDeleted(postId);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setErrorMessage(\"Failed to delete post\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 26\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(DeletePost, \"bunQNCAhOjI1UxiMNU0Yhbz5lHw=\");\n_c = DeletePost;\nexport default DeletePost;\nvar _c;\n$RefreshReg$(_c, \"DeletePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeletePost","postId","onPostDeleted","_s","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleDelete","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Post/DeletePost.js"],"sourcesContent":["// import React from \"react\";\n\n// const DeletePost = ({ postId }) => {\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//       console.log(\"Post deleted successfully!\");\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return <button onClick={handleDelete}>Delete Post</button>;\n// };\n\n// export default DeletePost;\n\n// Denne fungerer med melding men error\n// import React, { useState } from \"react\";\n\n// const DeletePost = ({ postId, onPostDeleted }) => {\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//       console.log(\"Post deleted successfully!\");\n//       setSuccessMessage(\"Post deleted successfully!\");\n//       onPostDeleted(postId);\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Delete Post</button>\n//       {successMessage && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeletePost;\n\n// import React, { useState } from \"react\";\n\n// const DeletePost = ({ postId, onPostDeleted }) => {\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n\n//   const handleDelete = async () => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         if (response.status !== 404) {\n//           throw new Error(\"Failed to delete post\");\n//         }\n//       } else {\n//         setTimeout(() => {\n//           setPosts(posts.filter((post) => post.id !== postId));\n//           setSuccessMessage(\"Post deleted successfully!\");\n//           setSuccessMessageVisible(true);\n//         }, 100);\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setErrorMessage(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleDelete}>Delete Post</button>\n//       {errorMessage && <p>{errorMessage}</p>}\n//       {successMessage && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeletePost;\n\nimport React, { useState } from \"react\";\n\nconst DeletePost = ({ postId, onPostDeleted }) => {\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleDelete = async () => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      if (response.ok) {\n        setSuccessMessage(\"Post deleted successfully!\");\n        onPostDeleted(postId);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setErrorMessage(\"Failed to delete post\");\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleDelete}>Delete Post</button>\n      {successMessage && <p>{successMessage}</p>}\n      {errorMessage && <p>{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default DeletePost;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mDAAkDZ,MAAO,EAAC,EAC3D;QACEa,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,SAAU;QACrC;MACF,CACF,CAAC;MACD,IAAIG,QAAQ,CAACK,EAAE,EAAE;QACfZ,iBAAiB,CAAC,4BAA4B,CAAC;QAC/CH,aAAa,CAACD,MAAM,CAAC;MACvB,CAAC,MAAM;QACL,MAAM,IAAIiB,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CZ,eAAe,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC;EAED,oBACER,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,OAAO,EAAEd,YAAa;MAAAa,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDtB,cAAc,iBAAIL,OAAA;MAAAsB,QAAA,EAAIjB;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCpB,YAAY,iBAAIP,OAAA;MAAAsB,QAAA,EAAIf;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCIH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}