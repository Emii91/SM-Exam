{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Post/CreatePostForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./CreatePostForm.css\";\n\n// const CreatePostForm = ({ onPostCreated }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/posts\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//           body: JSON.stringify({ title, body }),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to create post\");\n//       }\n//       console.log(\"Post created successfully!\");\n//       if (typeof onPostCreated === \"function\") {\n//         onPostCreated();\n//       }\n//       setShowSuccessMessage(true);\n//       setTitle(\"\");\n//       setBody(\"\");\n//       setTimeout(() => {\n//         setShowSuccessMessage(false);\n//       }, 3000);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"title\">Title:</label>\n//         <input\n//           type=\"text\"\n//           id=\"title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"body\">Body:</label>\n//         <textarea\n//           id=\"body\"\n//           value={body}\n//           onChange={(e) => setBody(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Create Post</button>\n//       {showSuccessMessage && <p>Post created successfully!</p>}\n//     </form>\n//   );\n// };\n\n// export default CreatePostForm;\n\nimport React, { useState } from \"react\";\nimport \"./CreatePostForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Title:\", title);\n    console.log(\"Body:\", body);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          value: body,\n          onChange: e => setBody(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostForm, \"6HXhu2MyhlZpOMFDXlcyR7kq/h8=\");\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePostForm","_s","title","setTitle","body","setBody","handleSubmit","e","preventDefault","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Post/CreatePostForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"./CreatePostForm.css\";\n\n// const CreatePostForm = ({ onPostCreated }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/social/posts\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//           body: JSON.stringify({ title, body }),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to create post\");\n//       }\n//       console.log(\"Post created successfully!\");\n//       if (typeof onPostCreated === \"function\") {\n//         onPostCreated();\n//       }\n//       setShowSuccessMessage(true);\n//       setTitle(\"\");\n//       setBody(\"\");\n//       setTimeout(() => {\n//         setShowSuccessMessage(false);\n//       }, 3000);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label htmlFor=\"title\">Title:</label>\n//         <input\n//           type=\"text\"\n//           id=\"title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label htmlFor=\"body\">Body:</label>\n//         <textarea\n//           id=\"body\"\n//           value={body}\n//           onChange={(e) => setBody(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\">Create Post</button>\n//       {showSuccessMessage && <p>Post created successfully!</p>}\n//     </form>\n//   );\n// };\n\n// export default CreatePostForm;\n\nimport React, { useState } from \"react\";\nimport \"./CreatePostForm.css\";\n\nconst CreatePostForm = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Title:\", title);\n    console.log(\"Body:\", body);\n  };\n\n  return (\n    <div className=\"create-post-form-container\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"body\">Body:</label>\n          <textarea\n            id=\"body\"\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Create Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}