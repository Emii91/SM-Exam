{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// function Hotels() {\n//   const [hotels, setHotels] = useState([]);\n\n//   const fetchHotels = async () => {\n//     try {\n//       const response = await fetch(\"https://v2.api.noroff.dev/holidaze/venues\");\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch hotels\");\n//       }\n//       const data = await response.json();\n//       setHotels(data);\n//     } catch (error) {\n//       console.error(\"Error fetching hotels:\", error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchHotels();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Hotels</h2>\n//       <ul>\n//         {hotels.map((hotel) => (\n//           <li key={hotel.id}>\n//             <h3>{hotel.name}</h3>\n//             <p>{hotel.description}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Hotels;","map":{"version":3,"names":[],"sources":["/Users/ecf/holi-exam/src/Pages/Hotels.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// function Hotels() {\n//   const [hotels, setHotels] = useState([]);\n\n//   const fetchHotels = async () => {\n//     try {\n//       const response = await fetch(\"https://v2.api.noroff.dev/holidaze/venues\");\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch hotels\");\n//       }\n//       const data = await response.json();\n//       setHotels(data);\n//     } catch (error) {\n//       console.error(\"Error fetching hotels:\", error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchHotels();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Hotels</h2>\n//       <ul>\n//         {hotels.map((hotel) => (\n//           <li key={hotel.id}>\n//             <h3>{hotel.name}</h3>\n//             <p>{hotel.description}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Hotels;\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}