{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Profiles.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import \"./Profiles.css\";\n\n// const Profiles = () => {\n//   const { name } = useParams();\n//   const [profile, setProfile] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [isFollowing, setIsFollowing] = useState(false);\n//   const [actionInProgress, setActionInProgress] = useState(false);\n\n//   useEffect(() => {\n//     const storedFollowStatus = localStorage.getItem(`${name}-follow`);\n//     setIsFollowing(storedFollowStatus === \"true\");\n//   }, [name]);\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch profile\");\n//         }\n//         const responseData = await response.json();\n//         setProfile(responseData);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error(\"Error fetching profile:\", error.message);\n//         setError(\"Failed to fetch profile\");\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, [name]);\n\n//   const handleFollow = async () => {\n//     try {\n//       if (isFollowing) {\n//         console.log(\"User is already following this profile\");\n//         return;\n//       }\n\n//       setActionInProgress(true);\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${name}/follow`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to follow profile\");\n//       }\n//       setIsFollowing(true);\n//       setActionInProgress(false);\n//       localStorage.setItem(`${name}-follow`, \"true\");\n//       setProfile((prevProfile) => ({\n//         ...prevProfile,\n//         _count: {\n//           ...prevProfile._count,\n//           followers: prevProfile._count.followers + 1,\n//         },\n//       }));\n//     } catch (error) {\n//       console.error(\"Error following profile:\", error);\n//       setActionInProgress(false);\n//     }\n//   };\n\n//   const handleUnfollow = async () => {\n//     try {\n//       setActionInProgress(true);\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${name}/unfollow`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to unfollow profile\");\n//       }\n//       setIsFollowing(false);\n//       setActionInProgress(false);\n//       localStorage.removeItem(`${name}-follow`);\n//       setProfile((prevProfile) => ({\n//         ...prevProfile,\n//         _count: {\n//           ...prevProfile._count,\n//           followers: prevProfile._count.followers - 1,\n//         },\n//       }));\n//     } catch (error) {\n//       console.error(\"Error unfollowing profile:\", error);\n//       setActionInProgress(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n\n//       <div className=\"container\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : error ? (\n//           <p>Error: {error}</p>\n//         ) : !profile ? (\n//           <p>Profile not found</p>\n//         ) : (\n//           <div className=\"row justify-content-center\">\n//             <div className=\"col-md-8\">\n//               <h1 className=\"text-center\">Profile Page for {name}</h1>\n//               <div className=\"card\" id=\"profile-card\">\n//                 <div className=\"card-body\" id=\"profile-body\">\n//                   <div className=\"text-center\">\n//                     <p>\n//                       {\" \"}\n//                       <img\n//                         src={profile.avatar}\n//                         alt=\"Avatar\"\n//                         style={{ maxWidth: \"200px\" }}\n//                       />\n//                     </p>\n//                     <p>\n//                       {\" \"}\n//                       <img\n//                         src={profile.banner}\n//                         alt=\"Banner\"\n//                         style={{ maxWidth: \"200px\" }}\n//                       />\n//                     </p>\n//                     <p>Name: {profile.name}</p>\n//                     <p>Followers: {profile._count.followers}</p>\n//                     <p>Following: {profile._count.following}</p>\n//                     <p>Posts: {profile._count.posts}</p>\n//                     {actionInProgress ? (\n//                       <p>Updating follow status...</p>\n//                     ) : (\n//                       <button\n//                         onClick={isFollowing ? handleUnfollow : handleFollow}\n//                         className=\"btn btn-primary\"\n//                       >\n//                         {isFollowing ? \"Unfollow\" : \"Follow\"}\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profiles;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport Post from \"./Posts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userPosts, setUserPosts] = useState([]);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${name}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch profile\");\n        }\n        const responseData = await response.json();\n        setProfile(responseData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error.message);\n        setError(\"Failed to fetch profile\");\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, [name]);\n  useEffect(() => {\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${name}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user posts\");\n        }\n        const userPostsData = await response.json();\n        setUserPosts(userPostsData);\n      } catch (error) {\n        console.error(\"Error fetching user posts:\", error.message);\n      }\n    };\n    if (profile) {\n      fetchUserPosts();\n    }\n  }, [name, profile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : !profile ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Profile not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center\",\n              children: [\"Profile Page for \", name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              id: \"profile-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                id: \"profile-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: profile.avatar,\n                      alt: \"Avatar\",\n                      style: {\n                        maxWidth: \"200px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: profile.banner,\n                      alt: \"Banner\",\n                      style: {\n                        maxWidth: \"200px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Name: \", profile.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Followers: \", profile._count.followers]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Following: \", profile._count.following]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Posts: \", profile._count.posts]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: userPosts.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center\",\n                children: \"User Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), userPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n                title: post.title,\n                body: post.body\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: \"No posts yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(Profiles, \"L9FIfRatiwXg1qNkHSptapwDfi4=\", false, function () {\n  return [useParams];\n});\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Profiles","_s","name","profile","setProfile","loading","setLoading","error","setError","userPosts","setUserPosts","fetchProfile","authToken","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","responseData","json","console","message","fetchUserPosts","userPostsData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","src","avatar","alt","style","maxWidth","banner","_count","followers","following","posts","length","map","post","title","body","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Profiles.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import \"./Profiles.css\";\n\n// const Profiles = () => {\n//   const { name } = useParams();\n//   const [profile, setProfile] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [isFollowing, setIsFollowing] = useState(false);\n//   const [actionInProgress, setActionInProgress] = useState(false);\n\n//   useEffect(() => {\n//     const storedFollowStatus = localStorage.getItem(`${name}-follow`);\n//     setIsFollowing(storedFollowStatus === \"true\");\n//   }, [name]);\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch profile\");\n//         }\n//         const responseData = await response.json();\n//         setProfile(responseData);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error(\"Error fetching profile:\", error.message);\n//         setError(\"Failed to fetch profile\");\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, [name]);\n\n//   const handleFollow = async () => {\n//     try {\n//       if (isFollowing) {\n//         console.log(\"User is already following this profile\");\n//         return;\n//       }\n\n//       setActionInProgress(true);\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${name}/follow`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to follow profile\");\n//       }\n//       setIsFollowing(true);\n//       setActionInProgress(false);\n//       localStorage.setItem(`${name}-follow`, \"true\");\n//       setProfile((prevProfile) => ({\n//         ...prevProfile,\n//         _count: {\n//           ...prevProfile._count,\n//           followers: prevProfile._count.followers + 1,\n//         },\n//       }));\n//     } catch (error) {\n//       console.error(\"Error following profile:\", error);\n//       setActionInProgress(false);\n//     }\n//   };\n\n//   const handleUnfollow = async () => {\n//     try {\n//       setActionInProgress(true);\n//       const authToken = localStorage.getItem(\"accessToken\");\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${name}/unfollow`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Failed to unfollow profile\");\n//       }\n//       setIsFollowing(false);\n//       setActionInProgress(false);\n//       localStorage.removeItem(`${name}-follow`);\n//       setProfile((prevProfile) => ({\n//         ...prevProfile,\n//         _count: {\n//           ...prevProfile._count,\n//           followers: prevProfile._count.followers - 1,\n//         },\n//       }));\n//     } catch (error) {\n//       console.error(\"Error unfollowing profile:\", error);\n//       setActionInProgress(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n\n//       <div className=\"container\">\n//         {loading ? (\n//           <p>Loading...</p>\n//         ) : error ? (\n//           <p>Error: {error}</p>\n//         ) : !profile ? (\n//           <p>Profile not found</p>\n//         ) : (\n//           <div className=\"row justify-content-center\">\n//             <div className=\"col-md-8\">\n//               <h1 className=\"text-center\">Profile Page for {name}</h1>\n//               <div className=\"card\" id=\"profile-card\">\n//                 <div className=\"card-body\" id=\"profile-body\">\n//                   <div className=\"text-center\">\n//                     <p>\n//                       {\" \"}\n//                       <img\n//                         src={profile.avatar}\n//                         alt=\"Avatar\"\n//                         style={{ maxWidth: \"200px\" }}\n//                       />\n//                     </p>\n//                     <p>\n//                       {\" \"}\n//                       <img\n//                         src={profile.banner}\n//                         alt=\"Banner\"\n//                         style={{ maxWidth: \"200px\" }}\n//                       />\n//                     </p>\n//                     <p>Name: {profile.name}</p>\n//                     <p>Followers: {profile._count.followers}</p>\n//                     <p>Following: {profile._count.following}</p>\n//                     <p>Posts: {profile._count.posts}</p>\n//                     {actionInProgress ? (\n//                       <p>Updating follow status...</p>\n//                     ) : (\n//                       <button\n//                         onClick={isFollowing ? handleUnfollow : handleFollow}\n//                         className=\"btn btn-primary\"\n//                       >\n//                         {isFollowing ? \"Unfollow\" : \"Follow\"}\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profiles;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport Post from \"./Posts\";\n\nconst Profiles = () => {\n  const { name } = useParams();\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${name}`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch profile\");\n        }\n        const responseData = await response.json();\n        setProfile(responseData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error.message);\n        setError(\"Failed to fetch profile\");\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, [name]);\n\n  useEffect(() => {\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${name}/posts`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user posts\");\n        }\n        const userPostsData = await response.json();\n        setUserPosts(userPostsData);\n      } catch (error) {\n        console.error(\"Error fetching user posts:\", error.message);\n      }\n    };\n\n    if (profile) {\n      fetchUserPosts();\n    }\n  }, [name, profile]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>Error: {error}</p>\n        ) : !profile ? (\n          <p>Profile not found</p>\n        ) : (\n          <>\n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-8\">\n                <h1 className=\"text-center\">Profile Page for {name}</h1>\n                <div className=\"card\" id=\"profile-card\">\n                  <div className=\"card-body\" id=\"profile-body\">\n                    <div className=\"text-center\">\n                      <p>\n                        <img\n                          src={profile.avatar}\n                          alt=\"Avatar\"\n                          style={{ maxWidth: \"200px\" }}\n                        />\n                      </p>\n                      <p>\n                        <img\n                          src={profile.banner}\n                          alt=\"Banner\"\n                          style={{ maxWidth: \"200px\" }}\n                        />\n                      </p>\n                      <p>Name: {profile.name}</p>\n                      <p>Followers: {profile._count.followers}</p>\n                      <p>Following: {profile._count.following}</p>\n                      <p>Posts: {profile._count.posts}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row justify-content-center\">\n              <div className=\"col-md-8\">\n                {userPosts.length > 0 ? (\n                  <>\n                    <h2 className=\"text-center\">User Posts</h2>\n                    {userPosts.map((post) => (\n                      <Post key={post.id} title={post.title} body={post.body} />\n                    ))}\n                  </>\n                ) : (\n                  <p className=\"text-center\">No posts yet</p>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profiles;\n"],"mappingslD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,sDAAqDd,IAAK,EAAC,EAC5D;UACEe,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,SAAU;UACrC;QACF,CACF,CAAC;QACD,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAC1ClB,UAAU,CAACiB,YAAY,CAAC;QACxBf,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACiB,OAAO,CAAC;QACvDhB,QAAQ,CAAC,yBAAyB,CAAC;QACnCF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEVV,SAAS,CAAC,MAAM;IACd,MAAMiC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMb,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,sDAAqDd,IAAK,QAAO,EAClE;UACEe,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,SAAU;UACrC;QACF,CACF,CAAC;QACD,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMM,aAAa,GAAG,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;QAC3CZ,YAAY,CAACgB,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACiB,OAAO,CAAC;MAC5D;IACF,CAAC;IAED,IAAIrB,OAAO,EAAE;MACXsB,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACvB,IAAI,EAAEC,OAAO,CAAC,CAAC;EAEnB,oBACEN,OAAA;IAAA8B,QAAA,gBACE9B,OAAA,CAACH,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlC,OAAA;MAAKmC,SAAS,EAAC,WAAW;MAAAL,QAAA,EACvBtB,OAAO,gBACNR,OAAA;QAAA8B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACfxB,KAAK,gBACPV,OAAA;QAAA8B,QAAA,GAAG,SAAO,EAACpB,KAAK;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GACnB,CAAC5B,OAAO,gBACVN,OAAA;QAAA8B,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAExBlC,OAAA,CAAAE,SAAA;QAAA4B,QAAA,gBACE9B,OAAA;UAAKmC,SAAS,EAAC,4BAA4B;UAAAL,QAAA,eACzC9B,OAAA;YAAKmC,SAAS,EAAC,UAAU;YAAAL,QAAA,gBACvB9B,OAAA;cAAImC,SAAS,EAAC,aAAa;cAAAL,QAAA,GAAC,mBAAiB,EAACzB,IAAI;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxDlC,OAAA;cAAKmC,SAAS,EAAC,MAAM;cAACC,EAAE,EAAC,cAAc;cAAAN,QAAA,eACrC9B,OAAA;gBAAKmC,SAAS,EAAC,WAAW;gBAACC,EAAE,EAAC,cAAc;gBAAAN,QAAA,eAC1C9B,OAAA;kBAAKmC,SAAS,EAAC,aAAa;kBAAAL,QAAA,gBAC1B9B,OAAA;oBAAA8B,QAAA,eACE9B,OAAA;sBACEqC,GAAG,EAAE/B,OAAO,CAACgC,MAAO;sBACpBC,GAAG,EAAC,QAAQ;sBACZC,KAAK,EAAE;wBAAEC,QAAQ,EAAE;sBAAQ;oBAAE;sBAAAV,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACD,CAAC,eACJlC,OAAA;oBAAA8B,QAAA,eACE9B,OAAA;sBACEqC,GAAG,EAAE/B,OAAO,CAACoC,MAAO;sBACpBH,GAAG,EAAC,QAAQ;sBACZC,KAAK,EAAE;wBAAEC,QAAQ,EAAE;sBAAQ;oBAAE;sBAAAV,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACD,CAAC,eACJlC,OAAA;oBAAA8B,QAAA,GAAG,QAAM,EAACxB,OAAO,CAACD,IAAI;kBAAA;oBAAA0B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC3BlC,OAAA;oBAAA8B,QAAA,GAAG,aAAW,EAACxB,OAAO,CAACqC,MAAM,CAACC,SAAS;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC5ClC,OAAA;oBAAA8B,QAAA,GAAG,aAAW,EAACxB,OAAO,CAACqC,MAAM,CAACE,SAAS;kBAAA;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC5ClC,OAAA;oBAAA8B,QAAA,GAAG,SAAO,EAACxB,OAAO,CAACqC,MAAM,CAACG,KAAK;kBAAA;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNlC,OAAA;UAAKmC,SAAS,EAAC,4BAA4B;UAAAL,QAAA,eACzC9B,OAAA;YAAKmC,SAAS,EAAC,UAAU;YAAAL,QAAA,EACtBlB,SAAS,CAACmC,MAAM,GAAG,CAAC,gBACnB/C,OAAA,CAAAE,SAAA;cAAA4B,QAAA,gBACE9B,OAAA;gBAAImC,SAAS,EAAC,aAAa;gBAAAL,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC1CtB,SAAS,CAACoC,GAAG,CAAEC,IAAI,iBAClBjD,OAAA,CAACF,IAAI;gBAAeoD,KAAK,EAAED,IAAI,CAACC,KAAM;gBAACC,IAAI,EAAEF,IAAI,CAACE;cAAK,GAA5CF,IAAI,CAACb,EAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuC,CAC1D,CAAC;YAAA,eACF,CAAC,gBAEHlC,OAAA;cAAGmC,SAAS,EAAC,aAAa;cAAAL,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAC3C;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACN;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1HID,QAAQ;EAAA,QACKP,SAAS;AAAA;AAAAwD,EAAA,GADtBjD,QAAQ;AA4Hd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}