{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/MyProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n//       {avatarURL && (\n//         <div className=\"card\" style={{ width: \"18rem\" }}>\n//           <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//           <div className=\"card-body\">\n//             <p className=\"card-text\">Update your avatar or banner image.</p>\n//           </div>\n//         </div>\n//       )}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {error && <p>Error: {error}</p>}\n//       <h2>Your Posts:</h2>\n//       {posts.map((post) => (\n//         <div key={post.id}>\n//           <h3>{post.title}</h3>\n//           <p>{post.body}</p>\n//           <EditPost postId={post.id} />\n//           <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//         </div>\n//       ))}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {/* Banner */}\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n\n//       {/* Profile card */}\n//       <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n//         <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">Profile Images</h5>\n//           <p className=\"card-text\">Update your avatar and banner images.</p>\n//           {/* Form for updating avatar */}\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"avatarURL\">New Avatar URL:</label>\n//               <input\n//                 type=\"text\"\n//                 id=\"avatarURL\"\n//                 value={avatarURL}\n//                 onChange={handleAvatarURLChange}\n//                 className=\"form-control mb-2\"\n//               />\n//               <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                 Update Avatar\n//               </button>\n//             </div>\n//           </form>\n\n//           {/* Form for updating banner */}\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"bannerURL\">New Banner URL:</label>\n//               <input\n//                 type=\"text\"\n//                 id=\"bannerURL\"\n//                 value={bannerURL}\n//                 onChange={handleBannerURLChange}\n//                 className=\"form-control mb-2\"\n//               />\n//               <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                 Update Banner\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n\n//       {/* Create Post Section */}\n//       <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">Create Post</h5>\n//           <button\n//             type=\"button\"\n//             className=\"btn btn-primary btn-block\"\n//             onClick={handleCreatePostClick}\n//           >\n//             Create Post\n//           </button>\n//           {showCreatePostForm && <CreatePostForm />}\n//         </div>\n//       </div>\n\n//       {/* Display user's posts */}\n//       {posts.map((post) => (\n//         <div className=\"card mb-3\" key={post.id}>\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{post.title}</h5>\n//             <p className=\"card-text\">{post.body}</p>\n//             <div className=\"btn-group\" role=\"group\">\n//               <EditPost postId={post.id} />\n//               <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n\n//       {/* View Posts link */}\n//       <Link to=\"/posts\">View Posts</Link>\n\n//       {/* Error and success messages */}\n//       {error && <p>Error: {error}</p>}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\nimport ChangeImageModal from \"../Components/Modal\";\nimport \"./MyProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProfile = () => {\n  _s();\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n  const profileName = localStorage.getItem(\"userName\");\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n    fetchUserPosts();\n  }, []);\n  const handleAvatarURLChange = event => {\n    setAvatarURL(event.target.value);\n  };\n  const handleBannerURLChange = event => {\n    setBannerURL(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: avatarURL,\n          banner: bannerURL\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n  const handlePostDeleted = async postId => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(`https://nf-api.onrender.com/api/v1/social/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      if (response.ok || response.status === 204) {\n        setPosts(posts.filter(post => post.id !== postId));\n        setSuccessMessage(\"Post deleted successfully!\");\n        setSuccessMessageVisible(true);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n  const handleModalSubmit = event => {\n    event.preventDefault();\n    // Here you can handle modal submit logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), bannerURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bannerURL,\n        alt: \"Banner\",\n        className: \"banner-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        width: \"24rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatarURL,\n        className: \"card-img-top\",\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Profile Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Update your avatar and banner images.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary mb-2\",\n          onClick: () => setModalType(\"avatar\"),\n          \"data-bs-toggle\": \"modal\",\n          \"data-bs-target\": \"#changeImageModal\",\n          children: \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => setModalType(\"banner\"),\n          \"data-bs-toggle\": \"modal\",\n          \"data-bs-target\": \"#changeImageModal\",\n          children: \"Change Banner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        width: \"24rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-block\",\n          onClick: handleCreatePostClick,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), showCreatePostForm && /*#__PURE__*/_jsxDEV(CreatePostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          role: \"group\",\n          children: [/*#__PURE__*/_jsxDEV(EditPost, {\n            postId: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeletePost, {\n            postId: post.id,\n            onPostDeleted: handlePostDeleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      children: \"View Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }, this), successMessageVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(ChangeImageModal, {\n      modalType: modalType,\n      handleModalSubmit: handleModalSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProfile, \"fo2CE/Ub4eyxURWw7R3WadM7G2A=\");\n_c = MyProfile;\nexport default MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["React","useState","useEffect","Link","Navbar","CreatePostForm","DeletePost","EditPost","ChangeImageModal","jsxDEV","_jsxDEV","MyProfile","_s","avatarURL","setAvatarURL","bannerURL","setBannerURL","error","setError","showCreatePostForm","setShowCreatePostForm","posts","setPosts","successMessage","setSuccessMessage","successMessageVisible","setSuccessMessageVisible","modalType","setModalType","profileName","localStorage","getItem","storedAvatarURL","storedBannerURL","fetchUserPosts","authToken","response","fetch","headers","Authorization","ok","Error","postData","json","console","handleAvatarURLChange","event","target","value","handleBannerURLChange","handleSubmit","preventDefault","method","body","JSON","stringify","avatar","banner","setItem","log","handleCreatePostClick","handlePostDeleted","postId","status","filter","post","id","handleModalSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","width","type","onClick","map","title","role","onPostDeleted","to","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/MyProfile.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n//       {avatarURL && (\n//         <div className=\"card\" style={{ width: \"18rem\" }}>\n//           <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//           <div className=\"card-body\">\n//             <p className=\"card-text\">Update your avatar or banner image.</p>\n//           </div>\n//         </div>\n//       )}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"avatarURL\">Avatar URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"avatarURL\"\n//             value={avatarURL}\n//             onChange={handleAvatarURLChange}\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"bannerURL\">Banner URL:</label>\n//           <input\n//             type=\"text\"\n//             id=\"bannerURL\"\n//             value={bannerURL}\n//             onChange={handleBannerURLChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <button onClick={handleCreatePostClick}>Create Post</button>\n//       {showCreatePostForm && <CreatePostForm />}\n//       <Link to=\"/posts\">View Posts</Link>\n//       {error && <p>Error: {error}</p>}\n//       <h2>Your Posts:</h2>\n//       {posts.map((post) => (\n//         <div key={post.id}>\n//           <h3>{post.title}</h3>\n//           <p>{post.body}</p>\n//           <EditPost postId={post.id} />\n//           <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//         </div>\n//       ))}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import CreatePostForm from \"./Post/CreatePostForm\";\n// import DeletePost from \"./Post/DeletePost\";\n// import EditPost from \"./Post/EditPost\";\n// import \"./MyProfile.css\";\n\n// const MyProfile = () => {\n//   const [avatarURL, setAvatarURL] = useState(\"\");\n//   const [bannerURL, setBannerURL] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n\n//   const profileName = localStorage.getItem(\"userName\");\n\n//   useEffect(() => {\n//     const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n//     if (storedAvatarURL) {\n//       setAvatarURL(storedAvatarURL);\n//     }\n\n//     const storedBannerURL = localStorage.getItem(\"bannerURL\");\n//     if (storedBannerURL) {\n//       setBannerURL(storedBannerURL);\n//     }\n\n//     const fetchUserPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch user's posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching user's posts:\", error);\n//         setError(\"Failed to fetch user's posts\");\n//       }\n//     };\n\n//     fetchUserPosts();\n//   }, []);\n\n//   const handleAvatarURLChange = (event) => {\n//     setAvatarURL(event.target.value);\n//   };\n\n//   const handleBannerURLChange = (event) => {\n//     setBannerURL(event.target.value);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n//         {\n//           method: \"PUT\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             avatar: avatarURL,\n//             banner: bannerURL,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to update profile media\");\n//       }\n\n//       localStorage.setItem(\"avatarURL\", avatarURL);\n//       localStorage.setItem(\"bannerURL\", bannerURL);\n\n//       console.log(\"Avatar and Banner URLs updated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error updating profile media:\", error);\n//       setError(\"Failed to update profile media\");\n//     }\n//   };\n\n//   const handleCreatePostClick = () => {\n//     setShowCreatePostForm(true);\n//   };\n\n//   const handlePostDeleted = async (postId) => {\n//     try {\n//       const authToken = localStorage.getItem(\"accessToken\");\n\n//       const response = await fetch(\n//         `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n//         {\n//           method: \"DELETE\",\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n\n//       if (response.ok || response.status === 204) {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//         setSuccessMessage(\"Post deleted successfully!\");\n//         setSuccessMessageVisible(true);\n//       } else {\n//         throw new Error(\"Failed to delete post\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting post:\", error);\n//       setError(\"Failed to delete post\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       {/* Banner */}\n//       {bannerURL && (\n//         <div className=\"banner-container\">\n//           <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n//         </div>\n//       )}\n\n//       {/* Profile card */}\n//       <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n//         <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">Profile Images</h5>\n//           <p className=\"card-text\">Update your avatar and banner images.</p>\n//           {/* Form for updating avatar */}\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"avatarURL\">New Avatar URL:</label>\n//               <input\n//                 type=\"text\"\n//                 id=\"avatarURL\"\n//                 value={avatarURL}\n//                 onChange={handleAvatarURLChange}\n//                 className=\"form-control mb-2\"\n//               />\n//               <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                 Update Avatar\n//               </button>\n//             </div>\n//           </form>\n\n//           {/* Form for updating banner */}\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"bannerURL\">New Banner URL:</label>\n//               <input\n//                 type=\"text\"\n//                 id=\"bannerURL\"\n//                 value={bannerURL}\n//                 onChange={handleBannerURLChange}\n//                 className=\"form-control mb-2\"\n//               />\n//               <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                 Update Banner\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n\n//       {/* Create Post Section */}\n//       <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title\">Create Post</h5>\n//           <button\n//             type=\"button\"\n//             className=\"btn btn-primary btn-block\"\n//             onClick={handleCreatePostClick}\n//           >\n//             Create Post\n//           </button>\n//           {showCreatePostForm && <CreatePostForm />}\n//         </div>\n//       </div>\n\n//       {/* Display user's posts */}\n//       {posts.map((post) => (\n//         <div className=\"card mb-3\" key={post.id}>\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{post.title}</h5>\n//             <p className=\"card-text\">{post.body}</p>\n//             <div className=\"btn-group\" role=\"group\">\n//               <EditPost postId={post.id} />\n//               <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n//             </div>\n//           </div>\n//         </div>\n//       ))}\n\n//       {/* View Posts link */}\n//       <Link to=\"/posts\">View Posts</Link>\n\n//       {/* Error and success messages */}\n//       {error && <p>Error: {error}</p>}\n//       {successMessageVisible && <p>{successMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport CreatePostForm from \"./Post/CreatePostForm\";\nimport DeletePost from \"./Post/DeletePost\";\nimport EditPost from \"./Post/EditPost\";\nimport ChangeImageModal from \"../Components/Modal\";\nimport \"./MyProfile.css\";\n\nconst MyProfile = () => {\n  const [avatarURL, setAvatarURL] = useState(\"\");\n  const [bannerURL, setBannerURL] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [showCreatePostForm, setShowCreatePostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n\n  const profileName = localStorage.getItem(\"userName\");\n\n  useEffect(() => {\n    const storedAvatarURL = localStorage.getItem(\"avatarURL\");\n    if (storedAvatarURL) {\n      setAvatarURL(storedAvatarURL);\n    }\n\n    const storedBannerURL = localStorage.getItem(\"bannerURL\");\n    if (storedBannerURL) {\n      setBannerURL(storedBannerURL);\n    }\n\n    const fetchUserPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/posts`,\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch user's posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching user's posts:\", error);\n        setError(\"Failed to fetch user's posts\");\n      }\n    };\n\n    fetchUserPosts();\n  }, []);\n\n  const handleAvatarURLChange = (event) => {\n    setAvatarURL(event.target.value);\n  };\n\n  const handleBannerURLChange = (event) => {\n    setBannerURL(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/profiles/${profileName}/media`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            avatar: avatarURL,\n            banner: bannerURL,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update profile media\");\n      }\n\n      localStorage.setItem(\"avatarURL\", avatarURL);\n      localStorage.setItem(\"bannerURL\", bannerURL);\n\n      console.log(\"Avatar and Banner URLs updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating profile media:\", error);\n      setError(\"Failed to update profile media\");\n    }\n  };\n\n  const handleCreatePostClick = () => {\n    setShowCreatePostForm(true);\n  };\n\n  const handlePostDeleted = async (postId) => {\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n\n      const response = await fetch(\n        `https://nf-api.onrender.com/api/v1/social/posts/${postId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      if (response.ok || response.status === 204) {\n        setPosts(posts.filter((post) => post.id !== postId));\n        setSuccessMessage(\"Post deleted successfully!\");\n        setSuccessMessageVisible(true);\n      } else {\n        throw new Error(\"Failed to delete post\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n      setError(\"Failed to delete post\");\n    }\n  };\n\n  const handleModalSubmit = (event) => {\n    event.preventDefault();\n    // Here you can handle modal submit logic\n  };\n\n  return (\n    <div>\n      <Navbar />\n      {/* Banner */}\n      {bannerURL && (\n        <div className=\"banner-container\">\n          <img src={bannerURL} alt=\"Banner\" className=\"banner-image\" />\n        </div>\n      )}\n\n      {/* Profile card */}\n      <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n        <img src={avatarURL} className=\"card-img-top\" alt=\"Avatar\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Profile Images</h5>\n          <p className=\"card-text\">Update your avatar and banner images.</p>\n          {/* Button for updating avatar */}\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mb-2\"\n            onClick={() => setModalType(\"avatar\")}\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#changeImageModal\"\n          >\n            Change Avatar\n          </button>\n\n          {/* Button for updating banner */}\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => setModalType(\"banner\")}\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#changeImageModal\"\n          >\n            Change Banner\n          </button>\n        </div>\n      </div>\n\n      {/* Create Post Section */}\n      <div className=\"card mb-3\" style={{ width: \"24rem\" }}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Create Post</h5>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block\"\n            onClick={handleCreatePostClick}\n          >\n            Create Post\n          </button>\n          {showCreatePostForm && <CreatePostForm />}\n        </div>\n      </div>\n\n      {/* Display user's posts */}\n      {posts.map((post) => (\n        <div className=\"card mb-3\" key={post.id}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{post.title}</h5>\n            <p className=\"card-text\">{post.body}</p>\n            <div className=\"btn-group\" role=\"group\">\n              <EditPost postId={post.id} />\n              <DeletePost postId={post.id} onPostDeleted={handlePostDeleted} />\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {/* View Posts link */}\n      <Link to=\"/posts\">View Posts</Link>\n\n      {/* Error and success messages */}\n      {error && <p>Error: {error}</p>}\n      {successMessageVisible && <p>{successMessage}</p>}\n\n      {/* Modal for changing avatar or banner */}\n      <ChangeImageModal\n        modalType={modalType}\n        handleModalSubmit={handleModalSubmit}\n      />\n    </div>\n  );\n};\n\nexport default MyProfile;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}