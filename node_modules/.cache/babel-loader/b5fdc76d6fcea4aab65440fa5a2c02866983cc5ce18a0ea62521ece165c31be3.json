{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\"></div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Dashboard = () => {\n//   const [enquiries, setEnquiries] = useState([]);\n//   const [messages, setMessages] = useState([]);\n\n//   const fetchEnquiries = async () => {\n//     try {\n//       const accessToken = localStorage.getItem(\"accessToken\");\n//       if (!accessToken) {\n//         throw new Error(\"Access token not found\");\n//       }\n\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/holidaze/bookings\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${accessToken}`,\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch enquiries\");\n//       }\n\n//       const data = await response.json();\n//       setEnquiries(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const fetchMessages = async () => {\n//     try {\n//       const accessToken = localStorage.getItem(\"accessToken\");\n//       if (!accessToken) {\n//         throw new Error(\"Access token not found\");\n//       }\n\n//       const response = await fetch(\"URL_TO_FETCH_MESSAGES_ENDPOINT\", {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch messages\");\n//       }\n\n//       const data = await response.json();\n//       setMessages(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchEnquiries();\n//     fetchMessages();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h2>Dashboard</h2>\n//       <div>\n//         <h3>Enquiries</h3>\n//         {enquiries.length === 0 ? (\n//           <p>No new enquiries</p>\n//         ) : (\n//           <ul>\n//             {enquiries.map((enquiry) => (\n//               <li key={enquiry.id}>{enquiry.message}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//       <div>\n//         <h3>Messages</h3>\n//         {messages.length === 0 ? (\n//           <p>No new messages</p>\n//         ) : (\n//           <ul>\n//             {messages.map((message) => (\n//               <li key={message.id}>{message.text}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [enquiries, setEnquiries] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const saveDataToLocalStorage = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n  };\n  const fetchDataFromLocalStorage = key => {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : [];\n  };\n  useEffect(() => {\n    const storedEnquiries = fetchDataFromLocalStorage(\"enquiries\");\n    setEnquiries(storedEnquiries);\n    const storedMessages = fetchDataFromLocalStorage(\"messages\");\n    setMessages(storedMessages);\n  }, []);\n  const handleSubmitEnquiry = enquiryData => {\n    const updatedEnquiries = [...enquiries, enquiryData];\n    saveDataToLocalStorage(\"enquiries\", updatedEnquiries);\n    setEnquiries(updatedEnquiries);\n  };\n  const handleSubmitMessage = messageData => {\n    const updatedMessages = [...messages, messageData];\n    saveDataToLocalStorage(\"messages\", updatedMessages);\n    setMessages(updatedMessages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enquiries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), enquiries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No new enquiries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: enquiries.map((enquiry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: enquiry.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No new messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"++VnoHqb+S4sY7NrUYTKWAXnExE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","Dashboard","_s","enquiries","setEnquiries","messages","setMessages","saveDataToLocalStorage","key","data","localStorage","setItem","JSON","stringify","fetchDataFromLocalStorage","getItem","parse","storedEnquiries","storedMessages","handleSubmitEnquiry","enquiryData","updatedEnquiries","handleSubmitMessage","messageData","updatedMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","enquiry","index","message","text","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Dashboard.js"],"sourcesContent":["// import React from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <Navbar />\n//       <div className=\"container mt-5\"></div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n\n// const Dashboard = () => {\n//   const [enquiries, setEnquiries] = useState([]);\n//   const [messages, setMessages] = useState([]);\n\n//   const fetchEnquiries = async () => {\n//     try {\n//       const accessToken = localStorage.getItem(\"accessToken\");\n//       if (!accessToken) {\n//         throw new Error(\"Access token not found\");\n//       }\n\n//       const response = await fetch(\n//         \"https://nf-api.onrender.com/api/v1/holidaze/bookings\",\n//         {\n//           headers: {\n//             Authorization: `Bearer ${accessToken}`,\n//           },\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch enquiries\");\n//       }\n\n//       const data = await response.json();\n//       setEnquiries(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const fetchMessages = async () => {\n//     try {\n//       const accessToken = localStorage.getItem(\"accessToken\");\n//       if (!accessToken) {\n//         throw new Error(\"Access token not found\");\n//       }\n\n//       const response = await fetch(\"URL_TO_FETCH_MESSAGES_ENDPOINT\", {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch messages\");\n//       }\n\n//       const data = await response.json();\n//       setMessages(data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchEnquiries();\n//     fetchMessages();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h2>Dashboard</h2>\n//       <div>\n//         <h3>Enquiries</h3>\n//         {enquiries.length === 0 ? (\n//           <p>No new enquiries</p>\n//         ) : (\n//           <ul>\n//             {enquiries.map((enquiry) => (\n//               <li key={enquiry.id}>{enquiry.message}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//       <div>\n//         <h3>Messages</h3>\n//         {messages.length === 0 ? (\n//           <p>No new messages</p>\n//         ) : (\n//           <ul>\n//             {messages.map((message) => (\n//               <li key={message.id}>{message.text}</li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\n\nconst Dashboard = () => {\n  const [enquiries, setEnquiries] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  const saveDataToLocalStorage = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n  };\n\n  const fetchDataFromLocalStorage = (key) => {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : [];\n  };\n\n  useEffect(() => {\n    const storedEnquiries = fetchDataFromLocalStorage(\"enquiries\");\n    setEnquiries(storedEnquiries);\n\n    const storedMessages = fetchDataFromLocalStorage(\"messages\");\n    setMessages(storedMessages);\n  }, []);\n\n  const handleSubmitEnquiry = (enquiryData) => {\n    const updatedEnquiries = [...enquiries, enquiryData];\n    saveDataToLocalStorage(\"enquiries\", updatedEnquiries);\n    setEnquiries(updatedEnquiries);\n  };\n\n  const handleSubmitMessage = (messageData) => {\n    const updatedMessages = [...messages, messageData];\n    saveDataToLocalStorage(\"messages\", updatedMessages);\n    setMessages(updatedMessages);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Dashboard</h2>\n      <div>\n        <h3>Enquiries</h3>\n        {enquiries.length === 0 ? (\n          <p>No new enquiries</p>\n        ) : (\n          <ul>\n            {enquiries.map((enquiry, index) => (\n              <li key={index}>{enquiry.message}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div>\n        <h3>Messages</h3>\n        {messages.length === 0 ? (\n          <p>No new messages</p>\n        ) : (\n          <ul>\n            {messages.map((message, index) => (\n              <li key={index}>{message.text}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}