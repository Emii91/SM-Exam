{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Posts.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n\n// const Posts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           \"https://nf-api.onrender.com/api/v1/social/posts\",\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//         setError(error.message);\n//       }\n//     };\n\n//     fetchPosts();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h2>List of Posts</h2>\n//       {error && <p>Error: {error}</p>}\n//       <ul>\n//         {posts.map((post) => (\n//           <li key={post.id}>\n//             <Link to={`/posts/${post.id}`} key={post.id}>\n//               {post.title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./Post/CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\"https://nf-api.onrender.com/api/v1/social/posts\", {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setError(error.message);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${post.id}`,\n          children: post.title\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Link","CommentForm","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","error","setError","fetchPosts","authToken","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","postData","json","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","to","id","title","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Posts.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Navbar from \"../Components/Layouts/Navbar\";\n// import { Link } from \"react-router-dom\";\n\n// const Posts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         const authToken = localStorage.getItem(\"accessToken\");\n//         const response = await fetch(\n//           \"https://nf-api.onrender.com/api/v1/social/posts\",\n//           {\n//             headers: {\n//               Authorization: `Bearer ${authToken}`,\n//             },\n//           }\n//         );\n//         if (!response.ok) {\n//           throw new Error(\"Failed to fetch posts\");\n//         }\n//         const postData = await response.json();\n//         setPosts(postData);\n//       } catch (error) {\n//         console.error(\"Error fetching posts:\", error);\n//         setError(error.message);\n//       }\n//     };\n\n//     fetchPosts();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <h2>List of Posts</h2>\n//       {error && <p>Error: {error}</p>}\n//       <ul>\n//         {posts.map((post) => (\n//           <li key={post.id}>\n//             <Link to={`/posts/${post.id}`} key={post.id}>\n//               {post.title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Components/Layouts/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport CommentForm from \"./Post/CommentForm\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const authToken = localStorage.getItem(\"accessToken\");\n        const response = await fetch(\n          \"https://nf-api.onrender.com/api/v1/social/posts\",\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch posts\");\n        }\n        const postData = await response.json();\n        setPosts(postData);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setError(error.message);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <h2>List of Posts</h2>\n      {error && <p>Error: {error}</p>}\n      <CommentForm />\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <Link to={`/posts/${post.id}`} key={post.id}>\n              {post.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}