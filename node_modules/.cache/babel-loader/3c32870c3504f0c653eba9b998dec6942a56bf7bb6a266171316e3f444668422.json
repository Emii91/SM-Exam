{"ast":null,"code":"var _jsxFileName = \"/Users/ecf/holi-exam/src/Pages/Post/CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(\"https://nf-api.onrender.com/api/v1/social/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${authToken}`\n        },\n        body: JSON.stringify({\n          title,\n          body\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create post\");\n      }\n      console.log(\"Post created successfully!\");\n      if (typeof onPostCreated === \"function\") {\n        onPostCreated();\n      }\n      setShowSuccessMessage(true);\n      setTitle(\"\");\n      setBody(\"\");\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  //   return (\n  //     <form onSubmit={handleSubmit}>\n  //       <div>\n  //         <label htmlFor=\"title\">Title:</label>\n  //         <input\n  //           type=\"text\"\n  //           id=\"title\"\n  //           value={title}\n  //           onChange={(e) => setTitle(e.target.value)}\n  //           required\n  //         />\n  //       </div>\n  //       <div>\n  //         <label htmlFor=\"body\">Body:</label>\n  //         <textarea\n  //           id=\"body\"\n  //           value={body}\n  //           onChange={(e) => setBody(e.target.value)}\n  //           required\n  //         />\n  //       </div>\n  //       <button type=\"submit\">Create Post</button>\n  //       {showSuccessMessage && <p>Post created successfully!</p>}\n  //     </form>\n  //   );\n  // };\n\n  // export default CreatePostForm;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"form-control\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: \"form-control\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-success\",\n      children: \"Post created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostForm, \"v1U9g67b8jNgm5O5hscUf3R7Lzs=\");\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePostForm","onPostCreated","_s","title","setTitle","body","setBody","showSuccessMessage","setShowSuccessMessage","handleSubmit","e","preventDefault","authToken","localStorage","getItem","response","fetch","method","headers","Authorization","JSON","stringify","ok","Error","console","log","setTimeout","error","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/ecf/holi-exam/src/Pages/Post/CreatePostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst CreatePostForm = ({ onPostCreated }) => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const authToken = localStorage.getItem(\"accessToken\");\n      const response = await fetch(\n        \"https://nf-api.onrender.com/api/v1/social/posts\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${authToken}`,\n          },\n          body: JSON.stringify({ title, body }),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to create post\");\n      }\n      console.log(\"Post created successfully!\");\n      if (typeof onPostCreated === \"function\") {\n        onPostCreated();\n      }\n      setShowSuccessMessage(true);\n      setTitle(\"\");\n      setBody(\"\");\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  //   return (\n  //     <form onSubmit={handleSubmit}>\n  //       <div>\n  //         <label htmlFor=\"title\">Title:</label>\n  //         <input\n  //           type=\"text\"\n  //           id=\"title\"\n  //           value={title}\n  //           onChange={(e) => setTitle(e.target.value)}\n  //           required\n  //         />\n  //       </div>\n  //       <div>\n  //         <label htmlFor=\"body\">Body:</label>\n  //         <textarea\n  //           id=\"body\"\n  //           value={body}\n  //           onChange={(e) => setBody(e.target.value)}\n  //           required\n  //         />\n  //       </div>\n  //       <button type=\"submit\">Create Post</button>\n  //       {showSuccessMessage && <p>Post created successfully!</p>}\n  //     </form>\n  //   );\n  // };\n\n  // export default CreatePostForm;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"form-control\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"body\">Body:</label>\n        <textarea\n          id=\"body\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n          className=\"form-control\"\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Create Post\n      </button>\n      {showSuccessMessage && (\n        <p className=\"mt-2 text-success\">Post created successfully!</p>\n      )}\n    </form>\n  );\n};\n\nexport default CreatePostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}